---
import { type CollectionEntry, getCollection } from 'astro:content';
import BlogPost from '../../layouts/BlogPost.astro';
import { render } from 'astro:content';

export async function getStaticPaths() {
    const blogPosts = await getCollection('blog');
    const mediumPosts = await getCollection('medium') || [];
    const posts = [...blogPosts, ...mediumPosts]; 

    const paths = posts.map((post) => ({
        params: { slug: post.id  }, // Codificar slug
        props: post,
    }));

    return paths;
}

type Props = CollectionEntry<'blog'> | CollectionEntry<'medium'>;

const post = Astro.props;

const isMedium = post.collection === "medium";

const { Content } = await render(post);
---

<BlogPost {...post.data}>
	<!-- renders local Markdown content -->
    <Content />
    <!-- renders the Medium post content directly as HTML -->
    <Fragment set:html={isMedium && post.data.content } />
    <!-- renders a link to the Medium post at the end of the content -->
    <a 
        href={isMedium && post.data.websiteUrl} 
        target="_blank"
    >
        {isMedium && post.data.websiteUrl}
    </a>
</BlogPost>
